{
  "name": "k8z",
  "version": "0.0.1",
  "private": true,
  "author": "sre",
  "description": "An out-of-box UI solution for enterprise applications",
  "scripts": {
    "analyze": "cross-env ANALYZE=1 max build",
    "build": "cross-env MOCK=none UMI_ENV=dev max build",
    "build:all": "yarn electron:build-server && yarn build:mac && yarn build:win && yarn build:linux",
    "build:all:pro": "yarn build:mac:pro && yarn build:win:pro && yarn build:linux:pro",
    "build:pro": "cross-env MOCK=none UMI_ENV=prod max build",
    "build:win": "yarn electron:build-server && yarn electron:build:win",
    "build:win:pro": "yarn electron:build-server && yarn electron:build:win:pro",
    "build:mac": "yarn electron:build-server && yarn electron:build:mac",
    "build:mac:pro": "yarn electron:build-server && yarn electron:build:mac:pro",
    "build:linux": "yarn electron:build-server && yarn electron:build:linux",
    "build:linux:pro": "yarn electron:build-server && yarn electron:build:linux:pro",
    "deploy": "yarn run build && yarn run gh-pages",
    "dev": "yarn start:dev",
    "pro": "yarn start:pro",
    "gh-pages": "gh-pages -d dist",
    "i18n-remove": "pro i18n-remove --locale=zh-CN --write",
    "postinstall": "max setup",
    "lint": "yarn run lint:js && yarn run lint:prettier && yarn run tsc",
    "lint-staged": "lint-staged",
    "lint-staged:js": "eslint --ext .js,.jsx,.ts,.tsx ",
    "lint:fix": "eslint --fix --cache --ext .js,.jsx,.ts,.tsx --format=pretty ./src ",
    "lint:js": "eslint --cache --ext .js,.jsx,.ts,.tsx --format=pretty ./src",
    "lint:prettier": "prettier -c --write \"src/**/*\" --end-of-line auto",
    "openapi": "max openapi",
    "playwright": "playwright install && playwright test",
    "prepare": "cd .. && husky install ui/.husky",
    "prettier": "prettier -c --write \"src/**/*\"",
    "serve": "umi-serve",
    "start": "yarn lint:prettier & cross-env MOCK=none UMI_ENV=local max dev",
    "start:pro": "cross-env MOCK=none UMI_ENV=prod max dev",
    "start:mock": "cross-env UMI_ENV=dev max dev",
    "start:dev": "cross-env REACT_APP_ENV=dev MOCK=none UMI_ENV=dev max dev",
    "start:no-mock": "cross-env MOCK=none UMI_ENV=dev max dev",
    "start:pre": "cross-env REACT_APP_ENV=pre UMI_ENV=dev max dev",
    "start:test": "cross-env REACT_APP_ENV=test MOCK=none UMI_ENV=dev max dev",
    "estart": "yarn lint:prettier & yarn electron:local",
    "estart:dev": "yarn electron:dev",
    "estart:pro": "yarn electron:pro",
    "test": "max test",
    "test:component": "max test src/components",
    "test:e2e": "node ./tests/run-tests.js",
    "tsc": "tsc --noEmit",
    "rebuild-deps": "electron-builder install-app-deps",
    "electron:init": "max electron init",
    "electron:local": "yarn electron:build-server && cross-env REACT_APP_ENV=dev MOCK=none UMI_ENV=local max dev electron",
    "electron:dev": "yarn electron:build-server && cross-env REACT_APP_ENV=dev MOCK=none UMI_ENV=dev max dev electron",
    "electron:pro": "yarn electron:build-server && cross-env REACT_APP_ENV=dev MOCK=none UMI_ENV=prod max dev electron",
    "electron:build:win": "cross-env REACT_APP_ENV=dev MOCK=none UMI_ENV=dev max build electron --win",
    "electron:build:win:pro": "cross-env MOCK=none UMI_ENV=prod max build electron --win",
    "electron:build:mac": "cross-env REACT_APP_ENV=dev MOCK=none UMI_ENV=dev max build electron --mac",
    "electron:build:mac:pro": "cross-env MOCK=none UMI_ENV=prod max build electron --mac",
    "electron:build:linux": "cross-env REACT_APP_ENV=dev MOCK=none UMI_ENV=dev max build electron --linux",
    "electron:build:linux:pro": "cross-env UMI_ENV=pro max build electron --linux",
    "electron:build:pro": "cross-env UMI_ENV=pro max build electron",
    "electron:generate-icons": "electron-icon-builder --input=./public/icon.png --output=public --flatten",
    "electron:build-server": "cd .. && make build.api && mkdir -p ui/server && cp bin/k8z ui/server/k8z && cp -r config ui/server/config && cp static-tcpdump ui/server/static-tcpdump && cd ui"
  },
  "lint-staged": {
    "**/*.{js,jsx,ts,tsx}": "yarn run lint-staged:js",
    "**/*.{js,jsx,tsx,ts,less,md,json}": [
      "prettier --write"
    ]
  },
  "browserslist": [
    "> 1%",
    "last 2 versions",
    "not ie <= 10"
  ],
  "license": "MIT",
  "dependencies": {
    "@ahooksjs/use-url-state": "^3.5.0",
    "@ant-design/icons": "^4.8.0",
    "@ant-design/pro-components": "2.3.52",
    "@monaco-editor/react": "^4.4.6",
    "@types/js-yaml": "^4.0.5",
    "@types/styled-components": "^5.1.26",
    "@umijs/route-utils": "^4.0.1",
    "ahooks": "^3.7.2",
    "antd": "^5.1.5",
    "classnames": "^2.3.0",
    "copy-to-clipboard": "^3.3.2",
    "dayjs": "^1.11.7",
    "electron-icon-builder": "^2.0.1",
    "electron-log": "^4.4.8",
    "js-yaml": "^4.1.0",
    "lodash": "^4.17.21",
    "numeral": "^2.0.6",
    "portfinder": "^1.0.32",
    "rc-menu": "^9.8.1",
    "rc-util": "^5.25.2",
    "react": "^18.2.0",
    "react-dev-inspector": "^1.8.4",
    "react-dom": "^18.2.0",
    "react-helmet-async": "^1.3.0",
    "styled-components": "^5.3.5",
    "xterm": "^5.0.0",
    "xterm-addon-fit": "^0.6.0",
    "xterm-theme": "^1.1.0"
  },
  "devDependencies": {
    "@ant-design/pro-cli": "^3.0.1",
    "@playwright/test": "^1.17.0",
    "@types/classnames": "^2.3.1",
    "@types/express": "^4.17.0",
    "@types/history": "^4.7.0",
    "@types/jest": "^26.0.0",
    "@types/lodash": "^4.14.0",
    "@types/node": "^16.11.26",
    "@types/react": "^17.0.0",
    "@types/react-dom": "^17.0.0",
    "@types/react-helmet": "^6.1.0",
    "@umijs/fabric": "^3.0.0",
    "@umijs/max": "^4.0.46",
    "@umijs/openapi": "^1.8.1",
    "cross-env": "^7.0.0",
    "cross-port-killer": "^1.3.0",
    "detect-installer": "^1.0.0",
    "electron": "^22.0.1",
    "electron-builder": "^23.6.0",
    "eslint": "^7.32.0",
    "fs-extra": "^11.1.0",
    "gh-pages": "^3.2.0",
    "husky": "^7.0.4",
    "jsdom-global": "^3.0.0",
    "lint-staged": "^10.0.0",
    "mockjs": "^1.1.0",
    "prettier": "^2.8.1",
    "swagger-ui-dist": "^4.12.0",
    "typescript": "^4.9.4",
    "umi-plugin-electron-builder": "^4.0.0",
    "umi-presets-pro": "^2.0.2",
    "umi-serve": "^1.9.11"
  },
  "engines": {
    "node": ">=12.0.0"
  }
}
